/* app/client
 *
 * Host: bundler (vite). (Although it will eventually run on the browser,
 * TypeScript's only responsibility is to verify that it will bundle. The bundler
 * should ensure it runs on the browser. See
 * ![TypeScript Module theory](https://www.typescriptlang.org/docs/handbook/modules/theory.html)
 * if you're really interested.)
 */
{
  "extends": "../../tsconfig.json",
  "include": ["env.d.ts", "src/**/*", "src/**/*.vue"],
  "exclude": ["src/**/__tests__/*"], // only excludes those specified by `include`
  "compilerOptions": {

    "module": "es2022",
    "moduleResolution": "bundler",
    // For Vite, the actual compilation target is determined by the
    // `build.target` option in the Vite config.
    // So don't change the `target` field here. It has to be
    // at least `ES2020` for dynamic `import()`s and `import.meta` to work correctly.
    "target": "ESNext",
    "lib": ["ES2020", "DOM", "DOM.Iterable"],
    // absolutely fine with a bundler, which is the only way this should be used
    "allowImportingTsExtensions": true,
    "resolveJsonModule": true,

    // Required in Vue projects
    "jsx": "preserve",
    "jsxImportSource": "vue",

    // See <https://www.semver-ts.org/formal-spec/5-compiler-considerations.html#strictness>
    // These 2 options are also part of the recommended tsconfig as of TS 5.9
    "noUncheckedIndexedAccess": true,
    // Commented out for now. It's hard to land in the current ecosystem.
    // Needs more consensus before moving forward.
    // "exactOptionalPropertyTypes": true,

    // <https://devblogs.microsoft.com/typescript/announcing-typescript-5-0/#verbatimmodulesyntax>
    // Any imports or exports without a type modifier are left around. This is important for `<script setup>`.
    // Anything that uses the type modifier is dropped entirely.
    "verbatimModuleSyntax": true,

    // For spec compliance.
    // `true` by default if the `target` is `ES2020` or higher.
    "useDefineForClassFields": true,

    // See <https://github.com/vuejs/vue-cli/pull/5688>
    "skipLibCheck": true
  }
}
