{
  /* Visit https://aka.ms/tsconfig to read more about this file */
  // this tsconfig affects:
  // - child projects (`client` and `server`) as defaults
  // - `./src` directly
  // most options are for ./src and server which use bun
  // the client overrides most as it is bundled by vite
  "compilerOptions": {
    "composite": true, // required for this config to be referenced as a 'TS Project Reference'

    // # environment setup - what javascript/ts features are we using?
    // javascript language version for transpiled output.
    // compiling to older versions will need more compatibility code in the output, but support more browsers
    // i avoid esnext for stricter compatibility, but this is debateable
    "target": "ES2022",
    // module system to use for transpiled output code can be overriden
    "module": "preserve",
    // how typescript resolves the module from an import during code analysis
    // bun recommends 'bundler', and the client uses this too
    "moduleResolution": "bundler",
    // allow us to use newer JS features. specifying this requires import of bun libraries
    "lib": ["ESNext"],
    // include types from packages without explicitly importing them
    "types": ["bun-types"],
    // "rootDirs": [],                                   /* Allow multiple folders to be treated as one when resolving modules. */
    // "typeRoots": [],                                  /* Specify multiple folders that act like './node_modules/@types'. */
    // "moduleSuffixes": [],                             /* List of file name suffixes to search when resolving a module. */
    "rootDir": "./",
    // import aliases
    "paths": {
      "@client/*": ["./client/src/*"],
      "@server/*": ["./server/src/*"],
      "@/*": ["./src/*"]
    },

    /* Emit */
    // don't emit transpiled javascript, only 'type declaration' files
    // this is overridden for the client, but bun can run ts natively
    "emitDeclarationOnly": true,
    "allowImportingTsExtensions": true,
    // "declarationMap": true,                           /* Create sourcemaps for d.ts files. */
    // "sourceMap": true,                                /* Create source map files for emitted JavaScript files. */
    // "outFile": "",
    // "outDir": "./",                                   /* Specify an output folder for all emitted files. */
    // "removeComments": true,                           /* Disable emitting comments. */
    // "noEmit": true,                                   /* Disable emitting files from a compilation. */
    // "importHelpers": true,                            /* Allow importing helper functions from tslib once per project, instead of including them per-file. */
    // "importsNotUsedAsValues": "remove",               /* Specify emit/checking behavior for imports that are only used for types. */
    // "downlevelIteration": true,                       /* Emit more compliant, but verbose and less performant JavaScript for iteration. */
    // "sourceRoot": "",                                 /* Specify the root path for debuggers to find the reference source code. */
    // "mapRoot": "",                                    /* Specify the location where debugger should locate map files instead of generated locations. */
    // "inlineSourceMap": true,                          /* Include sourcemap files inside the emitted JavaScript. */
    // "inlineSources": true,                            /* Include source code in the sourcemaps inside the emitted JavaScript. */
    // "emitBOM": true,                                  /* Emit a UTF-8 Byte Order Mark (BOM) in the beginning of output files. */
    // "newLine": "crlf",                                /* Set the newline character for emitting files. */
    // "stripInternal": true,                            /* Disable emitting declarations that have '@internal' in their JSDoc comments. */
    // "noEmitHelpers": true,                            /* Disable generating custom helper functions like '__extends' in compiled output. */
    // "noEmitOnError": true,                            /* Disable emitting files if any type checking errors are reported. */
    // "preserveConstEnums": true,                       /* Disable erasing 'const enum' declarations in generated code. */
    // "declarationDir": "./",                           /* Specify the output directory for generated declaration files. */
    // "preserveValueImports": true,                     /* Preserve unused imported values in the JavaScript output that would otherwise be removed. */

    /* Interop Constraints */
    // "isolatedModules": true,                          /* Ensure that each file can be safely transpiled without relying on other imports. */
    // "allowSyntheticDefaultImports": true,             /* Allow 'import x from y' when a module doesn't have a default export. */
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
    // "preserveSymlinks": true,                         /* Disable resolving symlinks to their realpath. This correlates to the same flag in node. */
    "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,

    /* Type Checking */
    "strict": true /* Enable all strict type-checking options. */,

    /* Completeness */
    // "skipDefaultLibCheck": true,                      /* Skip type checking .d.ts files that are included with TypeScript. */
    "skipLibCheck": true /* Skip type checking all .d.ts files. */
  }
}
